# docker-compose version
version: "3.3"

# network
networks:
  data:
  management:

# storage
volumes:
  stock-data:
  redis-data:

# computes
services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ibm
      MONGO_INITDB_ROOT_PASSWORD: dao
    volumes:
      - ./backend/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./data/input.json:/data/init-data.json
    networks:
      - data

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8113:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ibm
      ME_CONFIG_MONGODB_ADMINPASSWORD: dao
      ME_CONFIG_MONGODB_URL: mongodb://ibm:dao@mongo:27017/
    networks:
      - data
      - management

  backend:
    image: backend_ibm
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./backend:/code
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data:/code/data:ro
    ports:
      - "8111:80"
    command: node server
    networks:
      - data
      - management
    depends_on:
      - mongo

  frontend:
    image: frontend_ibm
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/code
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8112:80"
    command: [nginx-debug, "-g", "daemon off;"]
    networks:
      - management
